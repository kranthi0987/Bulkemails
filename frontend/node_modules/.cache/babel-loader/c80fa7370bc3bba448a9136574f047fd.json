{"ast":null,"code":"import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  constructor() {\n    this.bindNotify = fn => {\n      this.createNotification = fn;\n    };\n\n    this.notify = (message, options = {}) => {\n      if (this.createNotification) {\n        this.createNotification(message, options);\n      }\n    };\n\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n\n      portalElement = el;\n    }\n\n    ReactDOM.render(React.createElement(ToastManager, {\n      notify: this.bindNotify\n    }), portalElement);\n  }\n\n}\n\nexport default Toaster;","map":{"version":3,"sources":["C:/Workspace/pycharmprojects/Bulkemails/frontend/node_modules/toasted-notes/lib/Toast.js"],"names":["ReactDOM","React","ToastManager","isBrowser","window","document","PORTAL_ID","Toaster","constructor","bindNotify","fn","createNotification","notify","message","options","portalElement","existingPortalElement","getElementById","el","createElement","id","className","body","appendChild","render"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,MAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA9E;AACA,MAAMC,SAAS,GAAG,aAAlB;;AACA,MAAMC,OAAN,CAAc;AACVC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAmBC,EAAD,IAAQ;AACtB,WAAKC,kBAAL,GAA0BD,EAA1B;AACH,KAFD;;AAGA,SAAKE,MAAL,GAAc,CAACC,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B;AACrC,UAAI,KAAKH,kBAAT,EAA6B;AACzB,aAAKA,kBAAL,CAAwBE,OAAxB,EAAiCC,OAAjC;AACH;AACJ,KAJD;;AAKA,QAAI,CAACX,SAAL,EAAgB;AACZ;AACH;;AACD,QAAIY,aAAJ;AACA,UAAMC,qBAAqB,GAAGX,QAAQ,CAACY,cAAT,CAAwBX,SAAxB,CAA9B;;AACA,QAAIU,qBAAJ,EAA2B;AACvBD,MAAAA,aAAa,GAAGC,qBAAhB;AACH,KAFD,MAGK;AACD,YAAME,EAAE,GAAGb,QAAQ,CAACc,aAAT,CAAuB,KAAvB,CAAX;AACAD,MAAAA,EAAE,CAACE,EAAH,GAAQd,SAAR;AACAY,MAAAA,EAAE,CAACG,SAAH,GAAe,SAAf;;AACA,UAAIhB,QAAQ,CAACiB,IAAT,IAAiB,IAArB,EAA2B;AACvBjB,QAAAA,QAAQ,CAACiB,IAAT,CAAcC,WAAd,CAA0BL,EAA1B;AACH;;AACDH,MAAAA,aAAa,GAAGG,EAAhB;AACH;;AACDlB,IAAAA,QAAQ,CAACwB,MAAT,CAAgBvB,KAAK,CAACkB,aAAN,CAAoBjB,YAApB,EAAkC;AAAEU,MAAAA,MAAM,EAAE,KAAKH;AAAf,KAAlC,CAAhB,EAAgFM,aAAhF;AACH;;AA5BS;;AA8Bd,eAAeR,OAAf","sourcesContent":["import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\nclass Toaster {\n    constructor() {\n        this.bindNotify = (fn) => {\n            this.createNotification = fn;\n        };\n        this.notify = (message, options = {}) => {\n            if (this.createNotification) {\n                this.createNotification(message, options);\n            }\n        };\n        if (!isBrowser) {\n            return;\n        }\n        let portalElement;\n        const existingPortalElement = document.getElementById(PORTAL_ID);\n        if (existingPortalElement) {\n            portalElement = existingPortalElement;\n        }\n        else {\n            const el = document.createElement(\"div\");\n            el.id = PORTAL_ID;\n            el.className = \"Toaster\";\n            if (document.body != null) {\n                document.body.appendChild(el);\n            }\n            portalElement = el;\n        }\n        ReactDOM.render(React.createElement(ToastManager, { notify: this.bindNotify }), portalElement);\n    }\n}\nexport default Toaster;\n"]},"metadata":{},"sourceType":"module"}