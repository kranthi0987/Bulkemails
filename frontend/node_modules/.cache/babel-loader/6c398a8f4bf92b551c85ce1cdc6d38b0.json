{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\pycharmprojects\\\\Bulkemails\\\\frontend\\\\src\\\\views\\\\Pages\\\\Register\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { BASEURL } from \"../../../Constants\";\nimport toaster from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      repeated_Password: '',\n      mobilenumber: '',\n      submitted: false,\n      loading: false,\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      password,\n      repeated_password,\n      username,\n      email,\n      mobilenumber\n    } = this.state; // perform all neccassary validations\n\n    if (password !== repeated_password) {\n      alert(\"Passwords don't match\");\n    } else {\n      // make API call\n      console.log(username, password, email);\n      this.setState({\n        loading: true\n      });\n      let url = BASEURL + 'api/auth/register';\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          username: username,\n          password: password,\n          phone: mobilenumber\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(response);\n          toaster.notify(\"Sucessfull registered\", {\n            duration: 2000,\n            type: \"success\"\n          });\n          this.props.history.push('/login');\n          return response.json();\n        } else if (response.status === 400) {\n          toaster.notify(\"failed login\", {\n            duration: 2000,\n            type: \"error\"\n          });\n        } else {\n          toaster.notify(\"server error\", {\n            duration: 2000,\n            type: \"error\"\n          });\n        }\n      }).then(function (data) {\n        console.log('request succeeded with JSON response', data);\n      });\n    }\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      email,\n      repeated_password,\n      submitted,\n      mobilenumber,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"Create your account\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      autoComplete: \"username\",\n      name: \"username\",\n      value: username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }), submitted && !username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, \"Username is required\")), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 49\n      }\n    }, \"@\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }), submitted && !email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, \"email is required\")), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 49\n      }\n    }, \"+91\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      placeholder: \"mobilenumber\",\n      name: \"mobilenumber\",\n      value: mobilenumber,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }), submitted && !mobilenumber && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, \"email is required\")), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"new-password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }), submitted && !password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }, \"password is required\")), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Repeat password\",\n      name: \"repeated_password\",\n      autoComplete: \"new-password\",\n      value: repeated_password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }), submitted && !repeated_password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    }, \"repeated_password is required\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      block: true,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, \"Create Account\"))))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Workspace/pycharmprojects/Bulkemails/frontend/src/views/Pages/Register/Register.js"],"names":["React","Component","Button","Card","CardBody","CardFooter","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","BASEURL","toaster","Register","constructor","state","username","email","password","repeated_Password","mobilenumber","submitted","loading","error","handleChange","bind","handleSubmit","e","name","value","target","setState","preventDefault","repeated_password","alert","console","log","url","fetch","method","headers","body","JSON","stringify","phone","then","response","status","notify","duration","type","props","history","push","json","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Row\r\n} from 'reactstrap';\r\nimport {BASEURL} from \"../../../Constants\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"toasted-notes/src/styles.css\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            repeated_Password: '',\r\n            mobilenumber: '',\r\n            submitted: false,\r\n            loading: false,\r\n            error: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({submitted: true});\r\n        const {password, repeated_password, username, email, mobilenumber} = this.state;\r\n        // perform all neccassary validations\r\n        if (password !== repeated_password) {\r\n            alert(\"Passwords don't match\");\r\n        } else {\r\n            // make API call\r\n            console.log(username, password, email,);\r\n            this.setState({loading: true});\r\n            let url = BASEURL + 'api/auth/register';\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                headers: ({\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }),\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    username: username,\r\n                    password: password,\r\n                    phone: mobilenumber\r\n                })\r\n            }).then(response => {\r\n                if (response.status === 200) {\r\n                    console.log(response);\r\n                    toaster.notify(\"Sucessfull registered\", {\r\n                        duration: 2000, type: \"success\"\r\n                    });\r\n                    this.props.history.push('/login');\r\n                    return response.json()\r\n                } else if (response.status === 400) {\r\n                    toaster.notify(\"failed login\", {\r\n                        duration: 2000, type: \"error\"\r\n                    });\r\n                } else {\r\n                    toaster.notify(\"server error\", {\r\n                        duration: 2000, type: \"error\"\r\n                    });\r\n                }\r\n            }).then(function (data) {\r\n                console.log('request succeeded with JSON response', data)\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {username, password, email, repeated_password, submitted, mobilenumber, loading, error} = this.state;\r\n        return (\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <Card className=\"mx-4\">\r\n                                <CardBody className=\"p-4\">\r\n                                    <Form>\r\n                                        <h1>Register</h1>\r\n                                        <p className=\"text-muted\">Create your account</p>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-user\"></i>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input type=\"text\" placeholder=\"Username\" autoComplete=\"username\"\r\n                                                   name=\"username\"\r\n                                                   value={username} onChange={this.handleChange}/>\r\n                                            {submitted && !username &&\r\n                                            <div className=\"help-block\">Username is required</div>\r\n                                            }\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>@</InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input type=\"text\" placeholder=\"Email\" autoComplete=\"email\" name=\"email\"\r\n                                                   value={email}\r\n                                                   onChange={this.handleChange}/>\r\n                                            {submitted && !email &&\r\n                                            <div className=\"help-block\">email is required</div>\r\n                                            }\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>+91</InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input type=\"number\" placeholder=\"mobilenumber\" name=\"mobilenumber\"\r\n                                                   value={mobilenumber}\r\n                                                   onChange={this.handleChange}/>\r\n                                            {submitted && !mobilenumber &&\r\n                                            <div className=\"help-block\">email is required</div>\r\n                                            }\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-lock\"></i>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\"\r\n                                                   name=\"password\" value={password} onChange={this.handleChange}/>\r\n                                            {submitted && !password &&\r\n                                            <div className=\"help-block\">password is required</div>\r\n                                            }\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-4\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-lock\"></i>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input type=\"password\" placeholder=\"Repeat password\"\r\n                                                   name=\"repeated_password\"\r\n                                                   autoComplete=\"new-password\" value={repeated_password}\r\n                                                   onChange={this.handleChange}/>\r\n                                            {submitted && !repeated_password &&\r\n                                            <div className=\"help-block\">repeated_password is required</div>\r\n                                            }\r\n                                        </InputGroup>\r\n                                        <Button color=\"success\" block onClick={this.handleSubmit}>Create\r\n                                            Account</Button>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}