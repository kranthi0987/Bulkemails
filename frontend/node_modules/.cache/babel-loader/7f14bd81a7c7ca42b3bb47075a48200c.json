{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\pycharmprojects\\\\Bulkemails\\\\frontend\\\\src\\\\views\\\\Base\\\\Tables\\\\Tables.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\nimport { BASEURL } from \"../../../Constants\"; // function getvals(){\n//     return fetch('http://localhost:8000/message/listallmessages/',\n//     {\n//     \tmethod: \"GET\",\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json',\n//       },\n//     })\n//     .then((response) => response.json())\n//     .then((responseData) => {\n//       //console.log(responseData);\n//       return responseData;\n//     })\n//     .catch(error => console.warn(error));\n//   }\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeHttpRequestWithPage = async url => {\n      var token = localStorage.getItem('token');\n      let response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          \"Authorization\": 'Bearer ' + token,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        results: data.results,\n        next_page: data.next,\n        prev_page: data.previous,\n        count: data.count\n      });\n    };\n\n    this.state = {\n      tableData: [],\n      results: null,\n      next_page: null,\n      prev_page: null,\n      count: null\n    };\n  }\n\n  componentDidMount() {\n    this.makeHttpRequestWithPage(BASEURL + \"api/reports\");\n  }\n\n  handlenextChange(nextpage) {\n    console.log(nextpage);\n    this.makeHttpRequestWithPage(nextpage);\n  }\n\n  handleprevpage(prevpage) {\n    console.log(prevpage);\n    this.makeHttpRequestWithPage(prevpage);\n  } //firstmethod to get the list message data\n  //   componentDidMount() {\n  //       axios.get(BASEURL + 'message/listallmessages/', {\n  //           responseType: 'json'\n  //       }).then(response => {\n  //           this.state.tableData = response.data;\n  //           console.log(this.state.tableData)\n  //           // this.generateTableData()\n  //       });\n  //   }\n  // getallmessages = (data) => {\n  //     // make API call\n  //     let tablesHTML = [];\n  //     // this.setState({loading: true});\n  //     let url = 'http://localhost:8000/message/listallmessages/';\n  //     fetch(url, {\n  //         method: \"GET\"\n  //     }).then(response => {\n  //         if (response.status === 200) {\n  //               console.log(response);\n  //             return response.json()\n  //         } else {\n  //                console.log(\"oh no!\", response.status === 404)\n  //         }\n  //     }).then(function (data) {\n  //         console.log('request succeeded with JSON response', data)\n  //         return data\n  //     })\n  // }\n  //\n  // generateTableData() {\n  //     let res = [];\n  //     // let tableData1 = this.tableData;\n  //     console.log(this.state.tableData);\n  //\n  //     this.state.tableData.map(message => (\n  //         res.push(\n  //             <tr>\n  //                 <td key={message.from_who}>{message.from_who}</td>\n  //                 <td key={message.to_who}>{message.to_who}</td>\n  //                 <td key={message.message}>{message.message}</td>\n  //                 <td key={message.id}>{message.id}</td>\n  //                 <td key={message.message_status}>{message.message_status}</td>\n  //             </tr>\n  //         )\n  //     ));\n  //     // for (let tableData2 of tableData1) {\n  //     //     res.push(\n  //     //         <tr>\n  //     //             <td key={tableData2.from_who}>{tableData2.from_who}</td>\n  //     //             <td key={tableData2.to_who}>{tableData2.to_who}</td>\n  //     //             <td key={tableData2.message}>{tableData2.message}</td>\n  //     //             <td key={tableData2.id}>{tableData2.id}</td>\n  //     //             <td key={tableData2.message_status}>{tableData2.message_status}</td>\n  //     //         </tr>\n  //     //     )\n  //     // }\n  //     console.log(res)\n  //     return res;\n  // }\n\n\n  render() {\n    // if (!this.state.tableData.length)\n    //     return null;\n    // let res = [];\n    // this.state.tableData.map(message => (\n    //     res.push(\n    //         <tr key={message.message_uuid}>\n    //             <td>{message.from_who}</td>\n    //             <td>{message.phone}</td>\n    //             <td>{message.body}</td>\n    //             <td>{message.message_date_time}</td>\n    //             <td>{message.id}</td>\n    //             <td>\n    //                 if {message.sent_status}{\n    //                 <Badge color=\"success\">Active</Badge>\n    //             }else{\n    //                 <Badge color=\"danger\">Failed</Badge>\n    //             }\n    //             </td>\n    //         </tr>\n    //     )\n    // ));\n    let results;\n    console.log(this.state.next_page);\n    console.log(this.state.prev_page);\n\n    if (this.state.results !== null) {\n      results = this.state.results.map(reports => /*#__PURE__*/React.createElement(\"tr\", {\n        key: reports.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, reports.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, reports.report_uuid), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#ttext/base/tables/\" + reports.reports,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, reports.reports))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }), \" List All messages\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      hover: true,\n      bordered: true,\n      striped: true,\n      responsive: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, \"S No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, \"report uuid\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, \"report\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, results)), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(PaginationItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      previous: true,\n      tag: \"button\",\n      onClick: () => {\n        this.handleprevpage(this.state.prev_page);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 57\n      }\n    }, \"Prev\")), /*#__PURE__*/React.createElement(PaginationItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      next: true,\n      tag: \"button\",\n      onClick: () => {\n        this.handlenextChange(this.state.next_page);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 57\n      }\n    }, \"Next\")))))))));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["C:/Workspace/pycharmprojects/Bulkemails/frontend/src/views/Base/Tables/Tables.js"],"names":["React","Component","Card","CardBody","CardHeader","Col","Pagination","PaginationItem","PaginationLink","Row","Table","BASEURL","Tables","constructor","props","makeHttpRequestWithPage","url","token","localStorage","getItem","response","fetch","method","headers","data","json","console","log","setState","results","next_page","next","prev_page","previous","count","state","tableData","componentDidMount","handlenextChange","nextpage","handleprevpage","prevpage","render","map","reports","id","report_uuid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table} from 'reactstrap';\r\nimport {BASEURL} from \"../../../Constants\";\r\n// function getvals(){\r\n//     return fetch('http://localhost:8000/message/listallmessages/',\r\n//     {\r\n//     \tmethod: \"GET\",\r\n//       headers: {\r\n//         'Accept': 'application/json',\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//     })\r\n//     .then((response) => response.json())\r\n//     .then((responseData) => {\r\n//       //console.log(responseData);\r\n//       return responseData;\r\n//     })\r\n//     .catch(error => console.warn(error));\r\n\r\n//   }\r\nclass Tables extends Component {\r\n    tableData;\r\n    next_page;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableData: [],\r\n            results: null,\r\n            next_page: null,\r\n            prev_page: null,\r\n            count: null\r\n        }\r\n    }\r\n\r\n    makeHttpRequestWithPage = async url => {\r\n        var token = localStorage.getItem('token');\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                \"Authorization\": 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({\r\n            results: data.results,\r\n            next_page: data.next,\r\n            prev_page: data.previous,\r\n            count: data.count\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.makeHttpRequestWithPage(BASEURL + \"api/reports\");\r\n\r\n    }\r\n\r\n    handlenextChange(nextpage) {\r\n        console.log(nextpage);\r\n        this.makeHttpRequestWithPage(nextpage);\r\n    }\r\n\r\n    handleprevpage(prevpage) {\r\n        console.log(prevpage);\r\n        this.makeHttpRequestWithPage(prevpage);\r\n    }\r\n\r\n    //firstmethod to get the list message data\r\n    //   componentDidMount() {\r\n    //       axios.get(BASEURL + 'message/listallmessages/', {\r\n    //           responseType: 'json'\r\n    //       }).then(response => {\r\n    //           this.state.tableData = response.data;\r\n    //           console.log(this.state.tableData)\r\n    //           // this.generateTableData()\r\n    //       });\r\n    //   }\r\n\r\n    // getallmessages = (data) => {\r\n    //     // make API call\r\n    //     let tablesHTML = [];\r\n    //     // this.setState({loading: true});\r\n    //     let url = 'http://localhost:8000/message/listallmessages/';\r\n    //     fetch(url, {\r\n    //         method: \"GET\"\r\n    //     }).then(response => {\r\n    //         if (response.status === 200) {\r\n    //               console.log(response);\r\n    //             return response.json()\r\n    //         } else {\r\n    //                console.log(\"oh no!\", response.status === 404)\r\n    //         }\r\n    //     }).then(function (data) {\r\n    //         console.log('request succeeded with JSON response', data)\r\n    //         return data\r\n    //     })\r\n    // }\r\n    //\r\n    // generateTableData() {\r\n    //     let res = [];\r\n    //     // let tableData1 = this.tableData;\r\n    //     console.log(this.state.tableData);\r\n    //\r\n    //     this.state.tableData.map(message => (\r\n    //         res.push(\r\n    //             <tr>\r\n    //                 <td key={message.from_who}>{message.from_who}</td>\r\n    //                 <td key={message.to_who}>{message.to_who}</td>\r\n    //                 <td key={message.message}>{message.message}</td>\r\n    //                 <td key={message.id}>{message.id}</td>\r\n    //                 <td key={message.message_status}>{message.message_status}</td>\r\n    //             </tr>\r\n    //         )\r\n    //     ));\r\n    //     // for (let tableData2 of tableData1) {\r\n    //     //     res.push(\r\n    //     //         <tr>\r\n    //     //             <td key={tableData2.from_who}>{tableData2.from_who}</td>\r\n    //     //             <td key={tableData2.to_who}>{tableData2.to_who}</td>\r\n    //     //             <td key={tableData2.message}>{tableData2.message}</td>\r\n    //     //             <td key={tableData2.id}>{tableData2.id}</td>\r\n    //     //             <td key={tableData2.message_status}>{tableData2.message_status}</td>\r\n    //     //         </tr>\r\n    //     //     )\r\n    //     // }\r\n    //     console.log(res)\r\n    //     return res;\r\n    // }\r\n\r\n    render() {\r\n        // if (!this.state.tableData.length)\r\n        //     return null;\r\n        // let res = [];\r\n        // this.state.tableData.map(message => (\r\n        //     res.push(\r\n        //         <tr key={message.message_uuid}>\r\n        //             <td>{message.from_who}</td>\r\n        //             <td>{message.phone}</td>\r\n        //             <td>{message.body}</td>\r\n        //             <td>{message.message_date_time}</td>\r\n        //             <td>{message.id}</td>\r\n        //             <td>\r\n        //                 if {message.sent_status}{\r\n        //                 <Badge color=\"success\">Active</Badge>\r\n        //             }else{\r\n        //                 <Badge color=\"danger\">Failed</Badge>\r\n        //             }\r\n        //             </td>\r\n        //         </tr>\r\n        //     )\r\n        // ));\r\n\r\n        let results;\r\n        console.log(this.state.next_page);\r\n        console.log(this.state.prev_page);\r\n        if (this.state.results !== null) {\r\n            results = this.state.results.map(reports => (\r\n                <tr key={reports.id}>\r\n                    <td>{reports.id}</td>\r\n                    <td>{reports.report_uuid}</td>\r\n                    <a href={\"#ttext/base/tables/\" + reports.reports}>\r\n                        <td>{reports.reports}</td>\r\n                    </a>\r\n                </tr>\r\n\r\n            ));\r\n        }\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <i className=\"fa fa-align-justify\"></i> List All messages\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Table hover bordered striped responsive size=\"sm\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>S No</th>\r\n                                        <th>report uuid</th>\r\n                                        <th>report</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {results}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <nav>\r\n                                    <Pagination>\r\n                                        {/*<button type='submit' onClick={() => { this.handleprevpage(this.state.prev_page) }}>Prev</button>*/}\r\n                                        {/*<button type='submit' onClick={() => { this.handlenextChange(this.state.next_page) }}>Next</button>*/}\r\n                                        {/*<button type='submit' onClick = {this.handlenextChange(this.state.next_page)}>Next</button>*/}\r\n                                        <PaginationItem><PaginationLink previous\r\n                                                                        tag=\"button\"\r\n                                                                        onClick={() => {\r\n                                                                            this.handleprevpage(this.state.prev_page)\r\n                                                                        }}>Prev</PaginationLink></PaginationItem>\r\n                                        <PaginationItem><PaginationLink next\r\n                                                                        tag=\"button\"\r\n                                                                        onClick={() => {\r\n                                                                            this.handlenextChange(this.state.next_page)\r\n                                                                        }}>Next</PaginationLink></PaginationItem>\r\n                                    </Pagination>\r\n                                </nav>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}