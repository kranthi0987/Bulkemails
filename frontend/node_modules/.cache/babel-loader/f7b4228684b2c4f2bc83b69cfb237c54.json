{"ast":null,"code":"import * as React from \"react\";\nimport { Message } from \"./Message\";\nexport default class ToastManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"top-left\": [],\n      top: [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    };\n\n    this.notify = (message, options) => {\n      const toast = this.createToastState(message, options);\n      const {\n        position\n      } = toast; // prepend the toast for toasts positioned at the top of\n      // the screen, otherwise append it.\n\n      const isTop = position.includes(\"top\");\n      this.setState(prev => {\n        return Object.assign({}, prev, {\n          [position]: isTop ? [toast, ...prev[position]] : [...prev[position], toast]\n        });\n      });\n    };\n\n    this.createToastState = (message, options) => {\n      const id = ++ToastManager.idCounter; // a bit messy, but object.position returns a number because\n      // it's a method argument.\n\n      const position = options.hasOwnProperty(\"position\") && typeof options.position === \"string\" ? options.position : \"top\";\n      return {\n        id,\n        message,\n        position,\n        showing: true,\n        duration: typeof options.duration === \"undefined\" ? 5000 : options.duration,\n        onRequestRemove: () => this.removeToast(String(id), position),\n        type: options.type\n      };\n    }; // actually fully remove the toast\n\n\n    this.removeToast = (id, position) => {\n      this.setState(prev => {\n        return Object.assign({}, prev, {\n          [position]: prev[position].filter(toast => toast.id !== id)\n        });\n      });\n    };\n\n    this.getStyle = position => {\n      let style = {\n        maxWidth: \"560px\",\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\"\n      };\n\n      if (position === \"top\" || position === \"bottom\") {\n        style.margin = \"0 auto\";\n        style.textAlign = \"center\";\n      }\n\n      if (position.includes(\"top\")) {\n        style.top = 0;\n      }\n\n      if (position.includes(\"bottom\")) {\n        style.bottom = 0;\n      }\n\n      if (!position.includes(\"left\")) {\n        style.right = 0;\n      }\n\n      if (!position.includes(\"right\")) {\n        style.left = 0;\n      }\n\n      return style;\n    };\n\n    props.notify(this.notify);\n  }\n\n  render() {\n    return Object.keys(this.state).map(position => {\n      const pos = position;\n      const toasts = this.state[pos];\n      return React.createElement(\"span\", {\n        key: position,\n        className: \"Toaster__manager-\" + pos,\n        style: this.getStyle(pos)\n      }, toasts.map(toast => {\n        return React.createElement(Message, Object.assign({\n          position: pos,\n          key: toast.id\n        }, toast));\n      }));\n    });\n  }\n\n}\nToastManager.idCounter = 0;","map":{"version":3,"sources":["C:/Workspace/pycharmprojects/Bulkemails/frontend/node_modules/toasted-notes/lib/ToastManager.js"],"names":["React","Message","ToastManager","Component","constructor","props","state","top","bottom","notify","message","options","toast","createToastState","position","isTop","includes","setState","prev","Object","assign","id","idCounter","hasOwnProperty","showing","duration","onRequestRemove","removeToast","String","type","filter","getStyle","style","maxWidth","zIndex","pointerEvents","margin","textAlign","right","left","render","keys","map","pos","toasts","createElement","key","className"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Message } from \"./Message\";\nexport default class ToastManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"top-left\": [],\n            top: [],\n            \"top-right\": [],\n            \"bottom-left\": [],\n            bottom: [],\n            \"bottom-right\": []\n        };\n        this.notify = (message, options) => {\n            const toast = this.createToastState(message, options);\n            const { position } = toast;\n            // prepend the toast for toasts positioned at the top of\n            // the screen, otherwise append it.\n            const isTop = position.includes(\"top\");\n            this.setState(prev => {\n                return Object.assign({}, prev, { [position]: isTop\n                        ? [toast, ...prev[position]]\n                        : [...prev[position], toast] });\n            });\n        };\n        this.createToastState = (message, options) => {\n            const id = ++ToastManager.idCounter;\n            // a bit messy, but object.position returns a number because\n            // it's a method argument.\n            const position = options.hasOwnProperty(\"position\") && typeof options.position === \"string\"\n                ? options.position\n                : \"top\";\n            return {\n                id,\n                message,\n                position,\n                showing: true,\n                duration: typeof options.duration === \"undefined\" ? 5000 : options.duration,\n                onRequestRemove: () => this.removeToast(String(id), position),\n                type: options.type\n            };\n        };\n        // actually fully remove the toast\n        this.removeToast = (id, position) => {\n            this.setState(prev => {\n                return Object.assign({}, prev, { [position]: prev[position].filter(toast => toast.id !== id) });\n            });\n        };\n        this.getStyle = (position) => {\n            let style = {\n                maxWidth: \"560px\",\n                position: \"fixed\",\n                zIndex: 5500,\n                pointerEvents: \"none\"\n            };\n            if (position === \"top\" || position === \"bottom\") {\n                style.margin = \"0 auto\";\n                style.textAlign = \"center\";\n            }\n            if (position.includes(\"top\")) {\n                style.top = 0;\n            }\n            if (position.includes(\"bottom\")) {\n                style.bottom = 0;\n            }\n            if (!position.includes(\"left\")) {\n                style.right = 0;\n            }\n            if (!position.includes(\"right\")) {\n                style.left = 0;\n            }\n            return style;\n        };\n        props.notify(this.notify);\n    }\n    render() {\n        return Object.keys(this.state).map(position => {\n            const pos = position;\n            const toasts = this.state[pos];\n            return (React.createElement(\"span\", { key: position, className: \"Toaster__manager-\" + pos, style: this.getStyle(pos) }, toasts.map((toast) => {\n                return React.createElement(Message, Object.assign({ position: pos, key: toast.id }, toast));\n            })));\n        });\n    }\n}\nToastManager.idCounter = 0;\n"]},"metadata":{},"sourceType":"module"}